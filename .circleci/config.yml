# Java Maven CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:8u171-jdk

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      MAVEN_OPTS: -Xmx3200m

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "pom.xml" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: mvn dependency:go-offline

      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "pom.xml" }}

      # run tests!
      - run: mvn integration-test
      - run: mvn package
      - run: ls target
      - persist_to_workspace:
          root: target
          paths:
            - circleciintegration-0.0.1-SNAPSHOT.war
  deploy:
    docker:
      - image: circleci/python:2.7-jessie
    working_directory: ~/repo

    steps:
      - attach_workspace:
          at: target
      - run:
          name: Show files
          command: ls -l target
      - run:
          name: Install Amazon Web Services Elastic Beanstalk CLI
          command: sudo pip install awsebcli
      - run:
          name: Show AWS credentials
          command: echo ${AWS_ACCESS_KEY_ID} && echo ${AWS_SECRET_ACCESS_KEY}
      - run:
          name: Configure credentials for AWS
          command: mkdir ~/.aws && printf "[default]\naws_access_key_id = ${AWS_ACCESS_KEY_ID}\naws_secret_access_key = ${AWS_SECRET_ACCESS_KEY}" > ~/.aws/credentials
      - run:
          name: Deploy app to dev-env
          command: eb deploy Circleciintegration-env

workflows:
  version: 2
  build-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build